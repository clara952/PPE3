/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.ppe3;

import com.mycompany.ppe3.Tests.BDD;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;

/**
 *
 * @author c.bigeard
 */
public class CategorieEtProduit extends javax.swing.JPanel {
    
    /**
     * Creates new form CategorieEtProduit
     */
    public CategorieEtProduit() {
        initComponents();
    }
    /**
     * Méthode afficher liste des catégories
     */
    public void listCategorie(){
        String tuple;
        DefaultListModel leModel = (DefaultListModel)jListCategorie.getModel();
        leModel.clear();
        //Afficher le choix "tous" pour séléctionner tous les produits
        leModel.addElement("Tous");
        try {
            String sql = "select * from categorie";
            ResultSet lesTuples = ConnexionBDD.getInstance().requeteSelection(sql);
            while (lesTuples.next()) { 
                tuple = lesTuples.getString(2);
                leModel.addElement(tuple);
            }
        } catch (SQLException ex) {
            Logger.getLogger(BDD.class.getName()).log(Level.SEVERE, null, ex);
        }        
    }
    /**
     * Méthode afficher liste des produits
     */
    public void listProduit(){
        String tuple = null;
        DefaultListModel leModel = (DefaultListModel)jListProduit.getModel();
        leModel.clear();
        try {
            String sql = "select * from produit";
            ResultSet lesTuples = ConnexionBDD.getInstance().requeteSelection(sql);
            while (lesTuples.next()) { 
                tuple = lesTuples.getString(2);
                leModel.addElement(tuple);
            }
        } catch (SQLException ex) {
            Logger.getLogger(BDD.class.getName()).log(Level.SEVERE, null, ex);
        }        
    }
    /**
     * Méthode qui affiche dans la liste des produits seleument ceux qui appartiennent à la catégorie séléctionnée dans la liste des catégories
     */
    public void listProduitParCategorie(){
        //Tester si sélection faite ou pas
        if (jListCategorie.getSelectedValue() == null) {
            listProduit();
        }else{
            DefaultListModel listCategorie = (DefaultListModel)jListProduit.getModel();
            //Vider la liste pour pouvoir la remplir avec les bonnes informations
            listCategorie.clear();
            String tuple = null;
            try {
                String sql = "select * from produit, categorie where categorie.idCategorie = produit.idCategorie and categorie.libelleCategorie = '" + jListCategorie.getSelectedValue() + "'";
                ResultSet nomCategorie = ConnexionBDD.getInstance().requeteSelection(sql);
                if (jListCategorie.getSelectedIndex() == 0) {
                    listProduit();
                }else{
                    while (nomCategorie.next()) { 
                        tuple = nomCategorie.getString(2);
                        //Ajouter les éléments de la base de données un par un
                        listCategorie.addElement(tuple);
                    }
                }                
            } catch (SQLException ex) {
                Logger.getLogger(BDD.class.getName()).log(Level.SEVERE, null, ex);
            }        
        }
    }
    /**
     * Méthode qui retourn la catégorie sélectionnée dans la liste
     * @return 
     */
    public String getCategorieSelectionnee(){
        return jListCategorie.getSelectedValue();
    }
    /**
     * Méthode qui retourne le produit sélectionné dans la liste
     * @return 
     */
    public String getProduitSelectionne(){
        return jListProduit.getSelectedValue();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jListCategorie = new javax.swing.JList<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListProduit = new javax.swing.JList<>();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jListCategorie.setBackground(new java.awt.Color(255, 255, 255));
        jListCategorie.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jListCategorie.setModel(new DefaultListModel());
        jListCategorie.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListCategorieMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jListCategorie);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, 100, 210));

        jListProduit.setBackground(new java.awt.Color(255, 255, 255));
        jListProduit.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jListProduit.setModel(new DefaultListModel());
        jScrollPane1.setViewportView(jListProduit);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(113, 6, 150, 210));
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Action : quand une catégorie est sélectionnée (dans la liste catégorie) alors seuls les produits étant de cette catégorie seront afficher dans liste produit
     * @param evt 
     */
    private void jListCategorieMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListCategorieMouseClicked
        listProduitParCategorie();
    }//GEN-LAST:event_jListCategorieMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> jListCategorie;
    private javax.swing.JList<String> jListProduit;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
